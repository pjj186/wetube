* express-session 설치

- npm install express-session

express-session의 중요한 옵션중 secret이라는게 있다.

secret이란, 무작위 문자열로서, 쿠키에 들어있는 session ID를 암호화하기 위한 것.

예를들어, session ID를 전송할 때, 실제로 그 ID값 그대로를 보내는 것은 아니다.
실제로는 무척이나 암호화 된 상태로 보낸다.
그렇기때문에 secret은 꼭 들어가야 할 옵션이다.

secret은 랜덤한 문자열로 지정하는데, 환경변수(.env)에다가 넣어줘야한다.
왜냐하면 사람들이 secret을 볼 수 없게 해야하기 때문이다.
만약 누군가 이걸 알게되면, 그는 우리의 쿠키를 해독할 수 있게된다.

* resave 옵션
- resave는 세션을 강제로 저장하게 합니다.

* saveUninitialized 옵션
- saveUninitialized 옵션은 초기화되지 않은 '(uninitialized)' 세션을 저장소에 저장합니다.
- 새로운 세션이지만 변경되지 않은 세션은 초기화되지 않습니다.
- 로그인 session에 이용하려면, false를 선택하는 것이 유용합니다.


** 흐름 정리 **

웹에 저장된 쿠키는 express 로 보내지고 있어.


(app.js)
Express 는, session을 이용함으로써 쿠키를 손에 쥘 수 있게 된것이다.
그리고 passport를 통해서, 우린 session을 이용하는데, 즉 session이 가진 쿠키를 이용한다는 것을 의미한다.

(passport.js)
그리고 그 passport로, deserialize를 진행하는 것이다.
app.js의 session은 쿠키를 해독하거든.
해독되어서 실제 ID가 되는것.
그리고 그 해독된 ID는 passport로 넘어가게 된다. (app.js의 app.use(passport.session()에서)

passport.js 로 넘겨지면 deserializeUser 라는 함수가 실행된다.
deserialize로 사용자를 식별하게 되면, passport는 방금 찾은 그 사용자를, middleware 나 routes의 request(요청) object에 할당하게 된다.
그리하여, 이제 어느 route에서든 로그인한 사용자가 누구인지 체크할 수 있는것

아직은 session 정보, 쿠키 정보들을 메모리에 저장하고 있기때문에, 서버를 껐다키고 새로고침하면 정보가 증발되어버림.. 이건 고쳐야 하는것임

